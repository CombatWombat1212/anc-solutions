$viewer-border: $b-width solid $col-light;
$grid-size: 3.5rem;

@mixin viewer-border($side: all) {
  @if $side == all {
    border: $b-width solid $col-light;
  } @else if $side == top {
    border-top: $b-width solid $col-light;
  } @else if $side == bottom {
    border-bottom: $b-width solid $col-light;
  } @else if $side == left {
    border-left: $b-width solid $col-light;
  } @else if $side == right {
    border-right: $b-width solid $col-light;
  } @else {
    @error "Invalid value for $side. Expected 'top', 'bottom', 'left', 'right', or 'all'.";
  }
}



.viewer {
  @include mx-auto;
  @include flex-row;
  @include viewer-border;
  border-radius: 0rem 4rem 4rem 0rem;
  overflow: hidden;

  width: 85%; //TODO: this is temporary
  height: 50rem; //TODO: this is temporary

  --viewer-inner-pad: 3rem;

  &--content {
    width: 100%;
    background-image: linear-gradient($col-darker $b-width, transparent $b-width), linear-gradient(90deg, $col-darker $b-width, transparent $b-width);
    background-size: $grid-size $grid-size; /* Size of the grid */
    animation: backgroundMove 7s linear infinite; /* Adjust timing as needed */
  }
}




@keyframes backgroundMove {
  0% {
    background-position: 0px 0px;
  }
  100% {
    background-position: $grid-size #{-$grid-size}; /* Shift background to the left and up */
  }
}




